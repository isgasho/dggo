// Code generated by protoc-gen-go. DO NOT EDIT.
// source: xdrive.proto

package xdrive

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SpqType int32

const (
	SpqType_UNKNOWN SpqType = 0
	SpqType_BOOL    SpqType = 1
	SpqType_INT16   SpqType = 2
	SpqType_INT32   SpqType = 3
	SpqType_INT64   SpqType = 4
	SpqType_INT128  SpqType = 5
	SpqType_FLOAT   SpqType = 6
	SpqType_DOUBLE  SpqType = 7
	// BYTEA    = 0x0008;   not supported.
	SpqType_CSTR               SpqType = 9
	SpqType_DEC64              SpqType = 10
	SpqType_DEC128             SpqType = 11
	SpqType_UUID               SpqType = 12
	SpqType_INTERVAL           SpqType = 13
	SpqType_VARLENA            SpqType = 14
	SpqType_DATE               SpqType = 65539
	SpqType_TIME_MILLIS        SpqType = 131075
	SpqType_TIMESTAMP_MILLIS   SpqType = 196612
	SpqType_TIME_MICROS        SpqType = 262148
	SpqType_TIMESTAMP_MICROS   SpqType = 327684
	SpqType_JSON               SpqType = 393225
	SpqType_NUMERIC            SpqType = 458761
	SpqType_TIMESTAMPTZ_MILLIS SpqType = 524292
	SpqType_TIMESTAMPTZ_MICROS SpqType = 589828
	SpqType_MACADDR            SpqType = 655374
	SpqType_INET               SpqType = 720910
	SpqType_ARRAY              SpqType = 268435456
)

var SpqType_name = map[int32]string{
	0:         "UNKNOWN",
	1:         "BOOL",
	2:         "INT16",
	3:         "INT32",
	4:         "INT64",
	5:         "INT128",
	6:         "FLOAT",
	7:         "DOUBLE",
	9:         "CSTR",
	10:        "DEC64",
	11:        "DEC128",
	12:        "UUID",
	13:        "INTERVAL",
	14:        "VARLENA",
	65539:     "DATE",
	131075:    "TIME_MILLIS",
	196612:    "TIMESTAMP_MILLIS",
	262148:    "TIME_MICROS",
	327684:    "TIMESTAMP_MICROS",
	393225:    "JSON",
	458761:    "NUMERIC",
	524292:    "TIMESTAMPTZ_MILLIS",
	589828:    "TIMESTAMPTZ_MICROS",
	655374:    "MACADDR",
	720910:    "INET",
	268435456: "ARRAY",
}
var SpqType_value = map[string]int32{
	"UNKNOWN":            0,
	"BOOL":               1,
	"INT16":              2,
	"INT32":              3,
	"INT64":              4,
	"INT128":             5,
	"FLOAT":              6,
	"DOUBLE":             7,
	"CSTR":               9,
	"DEC64":              10,
	"DEC128":             11,
	"UUID":               12,
	"INTERVAL":           13,
	"VARLENA":            14,
	"DATE":               65539,
	"TIME_MILLIS":        131075,
	"TIMESTAMP_MILLIS":   196612,
	"TIME_MICROS":        262148,
	"TIMESTAMP_MICROS":   327684,
	"JSON":               393225,
	"NUMERIC":            458761,
	"TIMESTAMPTZ_MILLIS": 524292,
	"TIMESTAMPTZ_MICROS": 589828,
	"MACADDR":            655374,
	"INET":               720910,
	"ARRAY":              268435456,
}

func (x SpqType) String() string {
	return proto.EnumName(SpqType_name, int32(x))
}
func (SpqType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{0}
}

type XMsg_XMsgFlag int32

const (
	XMsg_EOS      XMsg_XMsgFlag = 0
	XMsg_EOB      XMsg_XMsgFlag = 1
	XMsg_CONTINUE XMsg_XMsgFlag = 2
	XMsg_SYNC     XMsg_XMsgFlag = 1000
	XMsg_BSPSYNC  XMsg_XMsgFlag = 1001
	XMsg_BSPDATA  XMsg_XMsgFlag = 1002
)

var XMsg_XMsgFlag_name = map[int32]string{
	0:    "EOS",
	1:    "EOB",
	2:    "CONTINUE",
	1000: "SYNC",
	1001: "BSPSYNC",
	1002: "BSPDATA",
}
var XMsg_XMsgFlag_value = map[string]int32{
	"EOS":      0,
	"EOB":      1,
	"CONTINUE": 2,
	"SYNC":     1000,
	"BSPSYNC":  1001,
	"BSPDATA":  1002,
}

func (x XMsg_XMsgFlag) String() string {
	return proto.EnumName(XMsg_XMsgFlag_name, int32(x))
}
func (XMsg_XMsgFlag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{12, 0}
}

type ColumnDesc struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ColumnDesc) Reset()         { *m = ColumnDesc{} }
func (m *ColumnDesc) String() string { return proto.CompactTextString(m) }
func (*ColumnDesc) ProtoMessage()    {}
func (*ColumnDesc) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{0}
}
func (m *ColumnDesc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnDesc.Unmarshal(m, b)
}
func (m *ColumnDesc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnDesc.Marshal(b, m, deterministic)
}
func (dst *ColumnDesc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnDesc.Merge(dst, src)
}
func (m *ColumnDesc) XXX_Size() int {
	return xxx_messageInfo_ColumnDesc.Size(m)
}
func (m *ColumnDesc) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnDesc.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnDesc proto.InternalMessageInfo

func (m *ColumnDesc) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ColumnDesc) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type Filter struct {
	Op                   string   `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	Column               string   `protobuf:"bytes,2,opt,name=column,proto3" json:"column,omitempty"`
	Args                 []string `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Filter) Reset()         { *m = Filter{} }
func (m *Filter) String() string { return proto.CompactTextString(m) }
func (*Filter) ProtoMessage()    {}
func (*Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{1}
}
func (m *Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Filter.Unmarshal(m, b)
}
func (m *Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Filter.Marshal(b, m, deterministic)
}
func (dst *Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Filter.Merge(dst, src)
}
func (m *Filter) XXX_Size() int {
	return xxx_messageInfo_Filter.Size(m)
}
func (m *Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_Filter proto.InternalMessageInfo

func (m *Filter) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

func (m *Filter) GetColumn() string {
	if m != nil {
		return m.Column
	}
	return ""
}

func (m *Filter) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

type CSVSpec struct {
	Delimiter            string   `protobuf:"bytes,1,opt,name=delimiter,proto3" json:"delimiter,omitempty"`
	Nullstr              string   `protobuf:"bytes,2,opt,name=nullstr,proto3" json:"nullstr,omitempty"`
	Header               bool     `protobuf:"varint,3,opt,name=header,proto3" json:"header,omitempty"`
	Quote                string   `protobuf:"bytes,4,opt,name=quote,proto3" json:"quote,omitempty"`
	Escape               string   `protobuf:"bytes,5,opt,name=escape,proto3" json:"escape,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSVSpec) Reset()         { *m = CSVSpec{} }
func (m *CSVSpec) String() string { return proto.CompactTextString(m) }
func (*CSVSpec) ProtoMessage()    {}
func (*CSVSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{2}
}
func (m *CSVSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSVSpec.Unmarshal(m, b)
}
func (m *CSVSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSVSpec.Marshal(b, m, deterministic)
}
func (dst *CSVSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSVSpec.Merge(dst, src)
}
func (m *CSVSpec) XXX_Size() int {
	return xxx_messageInfo_CSVSpec.Size(m)
}
func (m *CSVSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_CSVSpec.DiscardUnknown(m)
}

var xxx_messageInfo_CSVSpec proto.InternalMessageInfo

func (m *CSVSpec) GetDelimiter() string {
	if m != nil {
		return m.Delimiter
	}
	return ""
}

func (m *CSVSpec) GetNullstr() string {
	if m != nil {
		return m.Nullstr
	}
	return ""
}

func (m *CSVSpec) GetHeader() bool {
	if m != nil {
		return m.Header
	}
	return false
}

func (m *CSVSpec) GetQuote() string {
	if m != nil {
		return m.Quote
	}
	return ""
}

func (m *CSVSpec) GetEscape() string {
	if m != nil {
		return m.Escape
	}
	return ""
}

type FileSpec struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Format               string   `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	Csvspec              *CSVSpec `protobuf:"bytes,3,opt,name=csvspec,proto3" json:"csvspec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileSpec) Reset()         { *m = FileSpec{} }
func (m *FileSpec) String() string { return proto.CompactTextString(m) }
func (*FileSpec) ProtoMessage()    {}
func (*FileSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{3}
}
func (m *FileSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileSpec.Unmarshal(m, b)
}
func (m *FileSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileSpec.Marshal(b, m, deterministic)
}
func (dst *FileSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileSpec.Merge(dst, src)
}
func (m *FileSpec) XXX_Size() int {
	return xxx_messageInfo_FileSpec.Size(m)
}
func (m *FileSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_FileSpec.DiscardUnknown(m)
}

var xxx_messageInfo_FileSpec proto.InternalMessageInfo

func (m *FileSpec) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileSpec) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *FileSpec) GetCsvspec() *CSVSpec {
	if m != nil {
		return m.Csvspec
	}
	return nil
}

type StringList struct {
	Str                  []string `protobuf:"bytes,1,rep,name=str,proto3" json:"str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringList) Reset()         { *m = StringList{} }
func (m *StringList) String() string { return proto.CompactTextString(m) }
func (*StringList) ProtoMessage()    {}
func (*StringList) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{4}
}
func (m *StringList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringList.Unmarshal(m, b)
}
func (m *StringList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringList.Marshal(b, m, deterministic)
}
func (dst *StringList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringList.Merge(dst, src)
}
func (m *StringList) XXX_Size() int {
	return xxx_messageInfo_StringList.Size(m)
}
func (m *StringList) XXX_DiscardUnknown() {
	xxx_messageInfo_StringList.DiscardUnknown(m)
}

var xxx_messageInfo_StringList proto.InternalMessageInfo

func (m *StringList) GetStr() []string {
	if m != nil {
		return m.Str
	}
	return nil
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{5}
}
func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (dst *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(dst, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type KeyValueList struct {
	Kv                   []*KeyValue `protobuf:"bytes,1,rep,name=kv,proto3" json:"kv,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *KeyValueList) Reset()         { *m = KeyValueList{} }
func (m *KeyValueList) String() string { return proto.CompactTextString(m) }
func (*KeyValueList) ProtoMessage()    {}
func (*KeyValueList) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{6}
}
func (m *KeyValueList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValueList.Unmarshal(m, b)
}
func (m *KeyValueList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValueList.Marshal(b, m, deterministic)
}
func (dst *KeyValueList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValueList.Merge(dst, src)
}
func (m *KeyValueList) XXX_Size() int {
	return xxx_messageInfo_KeyValueList.Size(m)
}
func (m *KeyValueList) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValueList.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValueList proto.InternalMessageInfo

func (m *KeyValueList) GetKv() []*KeyValue {
	if m != nil {
		return m.Kv
	}
	return nil
}

type PathSpec struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PathSpec) Reset()         { *m = PathSpec{} }
func (m *PathSpec) String() string { return proto.CompactTextString(m) }
func (*PathSpec) ProtoMessage()    {}
func (*PathSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{7}
}
func (m *PathSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PathSpec.Unmarshal(m, b)
}
func (m *PathSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PathSpec.Marshal(b, m, deterministic)
}
func (dst *PathSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PathSpec.Merge(dst, src)
}
func (m *PathSpec) XXX_Size() int {
	return xxx_messageInfo_PathSpec.Size(m)
}
func (m *PathSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_PathSpec.DiscardUnknown(m)
}

var xxx_messageInfo_PathSpec proto.InternalMessageInfo

func (m *PathSpec) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type OpSpec struct {
	Op                   string   `protobuf:"bytes,1,opt,name=op,proto3" json:"op,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpSpec) Reset()         { *m = OpSpec{} }
func (m *OpSpec) String() string { return proto.CompactTextString(m) }
func (*OpSpec) ProtoMessage()    {}
func (*OpSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{8}
}
func (m *OpSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpSpec.Unmarshal(m, b)
}
func (m *OpSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpSpec.Marshal(b, m, deterministic)
}
func (dst *OpSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpSpec.Merge(dst, src)
}
func (m *OpSpec) XXX_Size() int {
	return xxx_messageInfo_OpSpec.Size(m)
}
func (m *OpSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_OpSpec.DiscardUnknown(m)
}

var xxx_messageInfo_OpSpec proto.InternalMessageInfo

func (m *OpSpec) GetOp() string {
	if m != nil {
		return m.Op
	}
	return ""
}

type OpStatus struct {
	Errcode              int32    `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Flag                 int32    `protobuf:"varint,3,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpStatus) Reset()         { *m = OpStatus{} }
func (m *OpStatus) String() string { return proto.CompactTextString(m) }
func (*OpStatus) ProtoMessage()    {}
func (*OpStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{9}
}
func (m *OpStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpStatus.Unmarshal(m, b)
}
func (m *OpStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpStatus.Marshal(b, m, deterministic)
}
func (dst *OpStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpStatus.Merge(dst, src)
}
func (m *OpStatus) XXX_Size() int {
	return xxx_messageInfo_OpStatus.Size(m)
}
func (m *OpStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_OpStatus.DiscardUnknown(m)
}

var xxx_messageInfo_OpStatus proto.InternalMessageInfo

func (m *OpStatus) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *OpStatus) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *OpStatus) GetFlag() int32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

//
// XCol and XRowSet
type XCol struct {
	Colname              string    `protobuf:"bytes,1,opt,name=colname,proto3" json:"colname,omitempty"`
	Nrow                 int32     `protobuf:"varint,2,opt,name=nrow,proto3" json:"nrow,omitempty"`
	Nullmap              []bool    `protobuf:"varint,3,rep,packed,name=nullmap,proto3" json:"nullmap,omitempty"`
	Sdata                []string  `protobuf:"bytes,4,rep,name=sdata,proto3" json:"sdata,omitempty"`
	I32Data              []int32   `protobuf:"varint,5,rep,packed,name=i32data,proto3" json:"i32data,omitempty"`
	I64Data              []int64   `protobuf:"varint,6,rep,packed,name=i64data,proto3" json:"i64data,omitempty"`
	F32Data              []float32 `protobuf:"fixed32,7,rep,packed,name=f32data,proto3" json:"f32data,omitempty"`
	F64Data              []float64 `protobuf:"fixed64,8,rep,packed,name=f64data,proto3" json:"f64data,omitempty"`
	Bindata              [][]byte  `protobuf:"bytes,9,rep,name=bindata,proto3" json:"bindata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *XCol) Reset()         { *m = XCol{} }
func (m *XCol) String() string { return proto.CompactTextString(m) }
func (*XCol) ProtoMessage()    {}
func (*XCol) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{10}
}
func (m *XCol) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XCol.Unmarshal(m, b)
}
func (m *XCol) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XCol.Marshal(b, m, deterministic)
}
func (dst *XCol) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XCol.Merge(dst, src)
}
func (m *XCol) XXX_Size() int {
	return xxx_messageInfo_XCol.Size(m)
}
func (m *XCol) XXX_DiscardUnknown() {
	xxx_messageInfo_XCol.DiscardUnknown(m)
}

var xxx_messageInfo_XCol proto.InternalMessageInfo

func (m *XCol) GetColname() string {
	if m != nil {
		return m.Colname
	}
	return ""
}

func (m *XCol) GetNrow() int32 {
	if m != nil {
		return m.Nrow
	}
	return 0
}

func (m *XCol) GetNullmap() []bool {
	if m != nil {
		return m.Nullmap
	}
	return nil
}

func (m *XCol) GetSdata() []string {
	if m != nil {
		return m.Sdata
	}
	return nil
}

func (m *XCol) GetI32Data() []int32 {
	if m != nil {
		return m.I32Data
	}
	return nil
}

func (m *XCol) GetI64Data() []int64 {
	if m != nil {
		return m.I64Data
	}
	return nil
}

func (m *XCol) GetF32Data() []float32 {
	if m != nil {
		return m.F32Data
	}
	return nil
}

func (m *XCol) GetF64Data() []float64 {
	if m != nil {
		return m.F64Data
	}
	return nil
}

func (m *XCol) GetBindata() [][]byte {
	if m != nil {
		return m.Bindata
	}
	return nil
}

type XRowSet struct {
	Tag                  int32    `protobuf:"varint,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Round                int32    `protobuf:"varint,2,opt,name=round,proto3" json:"round,omitempty"`
	Columns              []*XCol  `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XRowSet) Reset()         { *m = XRowSet{} }
func (m *XRowSet) String() string { return proto.CompactTextString(m) }
func (*XRowSet) ProtoMessage()    {}
func (*XRowSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{11}
}
func (m *XRowSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XRowSet.Unmarshal(m, b)
}
func (m *XRowSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XRowSet.Marshal(b, m, deterministic)
}
func (dst *XRowSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XRowSet.Merge(dst, src)
}
func (m *XRowSet) XXX_Size() int {
	return xxx_messageInfo_XRowSet.Size(m)
}
func (m *XRowSet) XXX_DiscardUnknown() {
	xxx_messageInfo_XRowSet.DiscardUnknown(m)
}

var xxx_messageInfo_XRowSet proto.InternalMessageInfo

func (m *XRowSet) GetTag() int32 {
	if m != nil {
		return m.Tag
	}
	return 0
}

func (m *XRowSet) GetRound() int32 {
	if m != nil {
		return m.Round
	}
	return 0
}

func (m *XRowSet) GetColumns() []*XCol {
	if m != nil {
		return m.Columns
	}
	return nil
}

type XMsg struct {
	Name                 string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Xflag                XMsg_XMsgFlag `protobuf:"varint,2,opt,name=xflag,proto3,enum=xdrive.XMsg_XMsgFlag" json:"xflag,omitempty"`
	Code                 int32         `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Info                 string        `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
	Rowset               *XRowSet      `protobuf:"bytes,5,opt,name=rowset,proto3" json:"rowset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *XMsg) Reset()         { *m = XMsg{} }
func (m *XMsg) String() string { return proto.CompactTextString(m) }
func (*XMsg) ProtoMessage()    {}
func (*XMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{12}
}
func (m *XMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XMsg.Unmarshal(m, b)
}
func (m *XMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XMsg.Marshal(b, m, deterministic)
}
func (dst *XMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XMsg.Merge(dst, src)
}
func (m *XMsg) XXX_Size() int {
	return xxx_messageInfo_XMsg.Size(m)
}
func (m *XMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_XMsg.DiscardUnknown(m)
}

var xxx_messageInfo_XMsg proto.InternalMessageInfo

func (m *XMsg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *XMsg) GetXflag() XMsg_XMsgFlag {
	if m != nil {
		return m.Xflag
	}
	return XMsg_EOS
}

func (m *XMsg) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *XMsg) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *XMsg) GetRowset() *XRowSet {
	if m != nil {
		return m.Rowset
	}
	return nil
}

//
// Read/Sample: Suppose we read two columns,
//
// dg -> xdrive: OpSpec
// xdrive -> dg: OpStatus
// dg -> xdrive: ReadRequest/SampleRequest
// xdrive -> dg: DataReply/XColDataReply col(page) 1
// xdrive -> dg: DataReply/XColDataReply col(page) 2
// xdrive -> dg: DataReply/XColDataReply col(page) 1
// xdrive -> dg: DataReply/XColDataReply col(page) 2
// ...
// xdrive -> dg: DataReply/XColDataReply col(page) 1
// xdrive -> dg: DataReply/XColDataReply col(page) 2
// xdrive -> dg: DataReply/XColDataReply of 0-byte data.
//
// At anytime, client can send an DataReply/XColDataReply of error.
type ReadRequest struct {
	// Which file(s)
	Filespec *FileSpec `protobuf:"bytes,1,opt,name=filespec,proto3" json:"filespec,omitempty"`
	// Table Schema
	Columndesc []*ColumnDesc `protobuf:"bytes,2,rep,name=columndesc,proto3" json:"columndesc,omitempty"`
	// Names of required columns
	Columnlist []string `protobuf:"bytes,3,rep,name=columnlist,proto3" json:"columnlist,omitempty"`
	// Filters
	Filter []*Filter `protobuf:"bytes,4,rep,name=filter,proto3" json:"filter,omitempty"`
	// Fragment
	FragId  int32 `protobuf:"varint,5,opt,name=frag_id,json=fragId,proto3" json:"frag_id,omitempty"`
	FragCnt int32 `protobuf:"varint,6,opt,name=frag_cnt,json=fragCnt,proto3" json:"frag_cnt,omitempty"`
	// ts
	Ts int64 `protobuf:"varint,7,opt,name=ts,proto3" json:"ts,omitempty"`
	// Query
	Query                []byte   `protobuf:"bytes,8,opt,name=query,proto3" json:"query,omitempty"`
	Bloomsz              int32    `protobuf:"varint,9,opt,name=bloomsz,proto3" json:"bloomsz,omitempty"`
	Bloom                []byte   `protobuf:"bytes,10,opt,name=bloom,proto3" json:"bloom,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{13}
}
func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (dst *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(dst, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetFilespec() *FileSpec {
	if m != nil {
		return m.Filespec
	}
	return nil
}

func (m *ReadRequest) GetColumndesc() []*ColumnDesc {
	if m != nil {
		return m.Columndesc
	}
	return nil
}

func (m *ReadRequest) GetColumnlist() []string {
	if m != nil {
		return m.Columnlist
	}
	return nil
}

func (m *ReadRequest) GetFilter() []*Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *ReadRequest) GetFragId() int32 {
	if m != nil {
		return m.FragId
	}
	return 0
}

func (m *ReadRequest) GetFragCnt() int32 {
	if m != nil {
		return m.FragCnt
	}
	return 0
}

func (m *ReadRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *ReadRequest) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *ReadRequest) GetBloomsz() int32 {
	if m != nil {
		return m.Bloomsz
	}
	return 0
}

func (m *ReadRequest) GetBloom() []byte {
	if m != nil {
		return m.Bloom
	}
	return nil
}

type SampleRequest struct {
	// Which file(s)
	Filespec *FileSpec `protobuf:"bytes,1,opt,name=filespec,proto3" json:"filespec,omitempty"`
	// Table Schema
	Columndesc []*ColumnDesc `protobuf:"bytes,2,rep,name=columndesc,proto3" json:"columndesc,omitempty"`
	// Fragment
	FragId  int32 `protobuf:"varint,3,opt,name=frag_id,json=fragId,proto3" json:"frag_id,omitempty"`
	FragCnt int32 `protobuf:"varint,4,opt,name=frag_cnt,json=fragCnt,proto3" json:"frag_cnt,omitempty"`
	// Sample size
	Nrow                 int32    `protobuf:"varint,5,opt,name=nrow,proto3" json:"nrow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SampleRequest) Reset()         { *m = SampleRequest{} }
func (m *SampleRequest) String() string { return proto.CompactTextString(m) }
func (*SampleRequest) ProtoMessage()    {}
func (*SampleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{14}
}
func (m *SampleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleRequest.Unmarshal(m, b)
}
func (m *SampleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleRequest.Marshal(b, m, deterministic)
}
func (dst *SampleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleRequest.Merge(dst, src)
}
func (m *SampleRequest) XXX_Size() int {
	return xxx_messageInfo_SampleRequest.Size(m)
}
func (m *SampleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SampleRequest proto.InternalMessageInfo

func (m *SampleRequest) GetFilespec() *FileSpec {
	if m != nil {
		return m.Filespec
	}
	return nil
}

func (m *SampleRequest) GetColumndesc() []*ColumnDesc {
	if m != nil {
		return m.Columndesc
	}
	return nil
}

func (m *SampleRequest) GetFragId() int32 {
	if m != nil {
		return m.FragId
	}
	return 0
}

func (m *SampleRequest) GetFragCnt() int32 {
	if m != nil {
		return m.FragCnt
	}
	return 0
}

func (m *SampleRequest) GetNrow() int32 {
	if m != nil {
		return m.Nrow
	}
	return 0
}

type DataReply struct {
	Errcode              int32    `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataReply) Reset()         { *m = DataReply{} }
func (m *DataReply) String() string { return proto.CompactTextString(m) }
func (*DataReply) ProtoMessage()    {}
func (*DataReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{15}
}
func (m *DataReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataReply.Unmarshal(m, b)
}
func (m *DataReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataReply.Marshal(b, m, deterministic)
}
func (dst *DataReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataReply.Merge(dst, src)
}
func (m *DataReply) XXX_Size() int {
	return xxx_messageInfo_DataReply.Size(m)
}
func (m *DataReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DataReply.DiscardUnknown(m)
}

var xxx_messageInfo_DataReply proto.InternalMessageInfo

func (m *DataReply) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *DataReply) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *DataReply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type XColDataReply struct {
	Errcode              int32    `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Data                 *XCol    `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *XColDataReply) Reset()         { *m = XColDataReply{} }
func (m *XColDataReply) String() string { return proto.CompactTextString(m) }
func (*XColDataReply) ProtoMessage()    {}
func (*XColDataReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{16}
}
func (m *XColDataReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_XColDataReply.Unmarshal(m, b)
}
func (m *XColDataReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_XColDataReply.Marshal(b, m, deterministic)
}
func (dst *XColDataReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_XColDataReply.Merge(dst, src)
}
func (m *XColDataReply) XXX_Size() int {
	return xxx_messageInfo_XColDataReply.Size(m)
}
func (m *XColDataReply) XXX_DiscardUnknown() {
	xxx_messageInfo_XColDataReply.DiscardUnknown(m)
}

var xxx_messageInfo_XColDataReply proto.InternalMessageInfo

func (m *XColDataReply) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *XColDataReply) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *XColDataReply) GetData() *XCol {
	if m != nil {
		return m.Data
	}
	return nil
}

//
// SizeMeta
//
// dg -> xdrive: OpSpec
// xdrive -> dg: OpStatus
// dg -> xdrive: SizeMetaRequest
// xdrive -> dg: SizeMetaReply
type SizeMetaRequest struct {
	// Which file(s)
	Filespec *FileSpec `protobuf:"bytes,1,opt,name=filespec,proto3" json:"filespec,omitempty"`
	// Table Schema
	Columndesc []*ColumnDesc `protobuf:"bytes,2,rep,name=columndesc,proto3" json:"columndesc,omitempty"`
	// Fragment
	FragId               int32    `protobuf:"varint,3,opt,name=frag_id,json=fragId,proto3" json:"frag_id,omitempty"`
	FragCnt              int32    `protobuf:"varint,4,opt,name=frag_cnt,json=fragCnt,proto3" json:"frag_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SizeMetaRequest) Reset()         { *m = SizeMetaRequest{} }
func (m *SizeMetaRequest) String() string { return proto.CompactTextString(m) }
func (*SizeMetaRequest) ProtoMessage()    {}
func (*SizeMetaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{17}
}
func (m *SizeMetaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SizeMetaRequest.Unmarshal(m, b)
}
func (m *SizeMetaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SizeMetaRequest.Marshal(b, m, deterministic)
}
func (dst *SizeMetaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SizeMetaRequest.Merge(dst, src)
}
func (m *SizeMetaRequest) XXX_Size() int {
	return xxx_messageInfo_SizeMetaRequest.Size(m)
}
func (m *SizeMetaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SizeMetaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SizeMetaRequest proto.InternalMessageInfo

func (m *SizeMetaRequest) GetFilespec() *FileSpec {
	if m != nil {
		return m.Filespec
	}
	return nil
}

func (m *SizeMetaRequest) GetColumndesc() []*ColumnDesc {
	if m != nil {
		return m.Columndesc
	}
	return nil
}

func (m *SizeMetaRequest) GetFragId() int32 {
	if m != nil {
		return m.FragId
	}
	return 0
}

func (m *SizeMetaRequest) GetFragCnt() int32 {
	if m != nil {
		return m.FragCnt
	}
	return 0
}

type SizeMetaReply struct {
	Errcode              int32    `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	Nrow                 int64    `protobuf:"varint,3,opt,name=nrow,proto3" json:"nrow,omitempty"`
	Nbyte                int64    `protobuf:"varint,4,opt,name=nbyte,proto3" json:"nbyte,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SizeMetaReply) Reset()         { *m = SizeMetaReply{} }
func (m *SizeMetaReply) String() string { return proto.CompactTextString(m) }
func (*SizeMetaReply) ProtoMessage()    {}
func (*SizeMetaReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{18}
}
func (m *SizeMetaReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SizeMetaReply.Unmarshal(m, b)
}
func (m *SizeMetaReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SizeMetaReply.Marshal(b, m, deterministic)
}
func (dst *SizeMetaReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SizeMetaReply.Merge(dst, src)
}
func (m *SizeMetaReply) XXX_Size() int {
	return xxx_messageInfo_SizeMetaReply.Size(m)
}
func (m *SizeMetaReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SizeMetaReply.DiscardUnknown(m)
}

var xxx_messageInfo_SizeMetaReply proto.InternalMessageInfo

func (m *SizeMetaReply) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *SizeMetaReply) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func (m *SizeMetaReply) GetNrow() int64 {
	if m != nil {
		return m.Nrow
	}
	return 0
}

func (m *SizeMetaReply) GetNbyte() int64 {
	if m != nil {
		return m.Nbyte
	}
	return 0
}

//
// Write: Again, suppose we are writing two columns
//
// dg -> xdrive: OpSpec
// xdrive -> dg: OpStatus
// dg -> xdrive: WriteRequest
// xdrive -> dg: WriteReply
// dg -> xdrive: WriteData/XCol of page(col) 1
// xdrive -> dg: WriteReply
// dg -> xdrive: WriteData/XCol of page(col) 2
// xdrive -> dg: WriteReply
// ...
// ...
// dg -> xdrive: WriteData/XCol of page(col) 1
// xdrive -> dg: WriteReply
// dg -> xdrive: WriteData/XCol of page(col) 2
// xdrive -> dg: WriteReply
// dg -> xdrive: WriteData with 0 byte
// xdrive -> dg: WriteReply
//
// If the final WriteReply has no error then the write succeeded.
type WriteRequest struct {
	Filespec             *FileSpec     `protobuf:"bytes,1,opt,name=filespec,proto3" json:"filespec,omitempty"`
	Columndesc           []*ColumnDesc `protobuf:"bytes,2,rep,name=columndesc,proto3" json:"columndesc,omitempty"`
	FragId               int32         `protobuf:"varint,3,opt,name=frag_id,json=fragId,proto3" json:"frag_id,omitempty"`
	FragCnt              int32         `protobuf:"varint,4,opt,name=frag_cnt,json=fragCnt,proto3" json:"frag_cnt,omitempty"`
	Ts                   int64         `protobuf:"varint,5,opt,name=ts,proto3" json:"ts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{19}
}
func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (dst *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(dst, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetFilespec() *FileSpec {
	if m != nil {
		return m.Filespec
	}
	return nil
}

func (m *WriteRequest) GetColumndesc() []*ColumnDesc {
	if m != nil {
		return m.Columndesc
	}
	return nil
}

func (m *WriteRequest) GetFragId() int32 {
	if m != nil {
		return m.FragId
	}
	return 0
}

func (m *WriteRequest) GetFragCnt() int32 {
	if m != nil {
		return m.FragCnt
	}
	return 0
}

func (m *WriteRequest) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

type WriteData struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteData) Reset()         { *m = WriteData{} }
func (m *WriteData) String() string { return proto.CompactTextString(m) }
func (*WriteData) ProtoMessage()    {}
func (*WriteData) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{20}
}
func (m *WriteData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteData.Unmarshal(m, b)
}
func (m *WriteData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteData.Marshal(b, m, deterministic)
}
func (dst *WriteData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteData.Merge(dst, src)
}
func (m *WriteData) XXX_Size() int {
	return xxx_messageInfo_WriteData.Size(m)
}
func (m *WriteData) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteData.DiscardUnknown(m)
}

var xxx_messageInfo_WriteData proto.InternalMessageInfo

func (m *WriteData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WriteReply struct {
	Errcode              int32    `protobuf:"varint,1,opt,name=errcode,proto3" json:"errcode,omitempty"`
	Errmsg               string   `protobuf:"bytes,2,opt,name=errmsg,proto3" json:"errmsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteReply) Reset()         { *m = WriteReply{} }
func (m *WriteReply) String() string { return proto.CompactTextString(m) }
func (*WriteReply) ProtoMessage()    {}
func (*WriteReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_xdrive_3930fe56eea82249, []int{21}
}
func (m *WriteReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteReply.Unmarshal(m, b)
}
func (m *WriteReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteReply.Marshal(b, m, deterministic)
}
func (dst *WriteReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteReply.Merge(dst, src)
}
func (m *WriteReply) XXX_Size() int {
	return xxx_messageInfo_WriteReply.Size(m)
}
func (m *WriteReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteReply.DiscardUnknown(m)
}

var xxx_messageInfo_WriteReply proto.InternalMessageInfo

func (m *WriteReply) GetErrcode() int32 {
	if m != nil {
		return m.Errcode
	}
	return 0
}

func (m *WriteReply) GetErrmsg() string {
	if m != nil {
		return m.Errmsg
	}
	return ""
}

func init() {
	proto.RegisterType((*ColumnDesc)(nil), "xdrive.ColumnDesc")
	proto.RegisterType((*Filter)(nil), "xdrive.Filter")
	proto.RegisterType((*CSVSpec)(nil), "xdrive.CSVSpec")
	proto.RegisterType((*FileSpec)(nil), "xdrive.FileSpec")
	proto.RegisterType((*StringList)(nil), "xdrive.StringList")
	proto.RegisterType((*KeyValue)(nil), "xdrive.KeyValue")
	proto.RegisterType((*KeyValueList)(nil), "xdrive.KeyValueList")
	proto.RegisterType((*PathSpec)(nil), "xdrive.PathSpec")
	proto.RegisterType((*OpSpec)(nil), "xdrive.OpSpec")
	proto.RegisterType((*OpStatus)(nil), "xdrive.OpStatus")
	proto.RegisterType((*XCol)(nil), "xdrive.XCol")
	proto.RegisterType((*XRowSet)(nil), "xdrive.XRowSet")
	proto.RegisterType((*XMsg)(nil), "xdrive.XMsg")
	proto.RegisterType((*ReadRequest)(nil), "xdrive.ReadRequest")
	proto.RegisterType((*SampleRequest)(nil), "xdrive.SampleRequest")
	proto.RegisterType((*DataReply)(nil), "xdrive.DataReply")
	proto.RegisterType((*XColDataReply)(nil), "xdrive.XColDataReply")
	proto.RegisterType((*SizeMetaRequest)(nil), "xdrive.SizeMetaRequest")
	proto.RegisterType((*SizeMetaReply)(nil), "xdrive.SizeMetaReply")
	proto.RegisterType((*WriteRequest)(nil), "xdrive.WriteRequest")
	proto.RegisterType((*WriteData)(nil), "xdrive.WriteData")
	proto.RegisterType((*WriteReply)(nil), "xdrive.WriteReply")
	proto.RegisterEnum("xdrive.SpqType", SpqType_name, SpqType_value)
	proto.RegisterEnum("xdrive.XMsg_XMsgFlag", XMsg_XMsgFlag_name, XMsg_XMsgFlag_value)
}

func init() { proto.RegisterFile("xdrive.proto", fileDescriptor_xdrive_3930fe56eea82249) }

var fileDescriptor_xdrive_3930fe56eea82249 = []byte{
	// 1234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0x5f, 0x8f, 0xd3, 0x46,
	0x10, 0xc7, 0x71, 0x1c, 0x3b, 0x93, 0xdc, 0xb1, 0x5d, 0x51, 0xea, 0x4a, 0x88, 0x5a, 0x56, 0x45,
	0xd3, 0x16, 0xa1, 0x36, 0x9c, 0x4e, 0x7d, 0xaa, 0x94, 0x4b, 0x72, 0x52, 0x4a, 0xfe, 0x1c, 0xeb,
	0xdc, 0x01, 0x7d, 0x41, 0x26, 0xd9, 0x0b, 0xd6, 0x39, 0xb1, 0xb1, 0x37, 0x07, 0xe1, 0x29, 0x12,
	0xad, 0x2a, 0x5e, 0xf8, 0x1a, 0xfd, 0x02, 0x7d, 0xe9, 0x63, 0xbf, 0x4c, 0xd5, 0x3f, 0x5f, 0xa2,
	0x9a, 0xf5, 0x6e, 0x2e, 0x05, 0xf1, 0x42, 0xa5, 0x8a, 0x97, 0x68, 0x7e, 0x33, 0xb3, 0xb3, 0x33,
	0xbf, 0x99, 0xd9, 0x18, 0xea, 0xcf, 0xa6, 0x59, 0x74, 0xce, 0x6f, 0xa5, 0x59, 0x22, 0x12, 0x5a,
	0x29, 0x90, 0xbf, 0x07, 0xd0, 0x4e, 0xe2, 0xe5, 0x7c, 0xd1, 0xe1, 0xf9, 0x84, 0x52, 0x28, 0x2f,
	0xc2, 0x39, 0x77, 0x0d, 0xcf, 0x68, 0x54, 0x99, 0x94, 0x51, 0x27, 0x56, 0x29, 0x77, 0x4b, 0x9e,
	0xd1, 0xb0, 0x98, 0x94, 0xfd, 0x0e, 0x54, 0x0e, 0xa3, 0x58, 0xf0, 0x8c, 0xee, 0x42, 0x29, 0x49,
	0x95, 0x7f, 0x29, 0x49, 0xe9, 0x55, 0xa8, 0x4c, 0x64, 0x3c, 0xe9, 0x5f, 0x65, 0x0a, 0x61, 0x94,
	0x30, 0x9b, 0xe5, 0xae, 0xe9, 0x99, 0x18, 0x19, 0x65, 0xff, 0x27, 0x03, 0xec, 0x76, 0x70, 0x12,
	0xa4, 0x7c, 0x42, 0xaf, 0x41, 0x75, 0xca, 0xe3, 0x68, 0x1e, 0x09, 0x9e, 0xa9, 0x70, 0x17, 0x0a,
	0xea, 0x82, 0xbd, 0x58, 0xc6, 0x71, 0x2e, 0x32, 0x15, 0x56, 0x43, 0xbc, 0xef, 0x31, 0x0f, 0xa7,
	0x3c, 0x73, 0x4d, 0xcf, 0x68, 0x38, 0x4c, 0x21, 0x7a, 0x05, 0xac, 0x27, 0xcb, 0x44, 0x70, 0xb7,
	0x2c, 0xfd, 0x0b, 0x80, 0xde, 0x3c, 0x9f, 0x84, 0x29, 0x77, 0xad, 0x22, 0xbb, 0x02, 0xf9, 0x21,
	0x38, 0x87, 0x51, 0xcc, 0x65, 0x26, 0x14, 0xca, 0x69, 0x28, 0x1e, 0x6b, 0x0e, 0x50, 0xc6, 0x73,
	0xa7, 0x49, 0x36, 0x0f, 0x85, 0xae, 0xaa, 0x40, 0xf4, 0x73, 0xb0, 0x27, 0xf9, 0x79, 0x9e, 0xf2,
	0x89, 0xbc, 0xbe, 0xd6, 0xbc, 0x7c, 0x4b, 0xb1, 0xac, 0xea, 0x62, 0xda, 0xee, 0x5f, 0x07, 0x08,
	0x44, 0x16, 0x2d, 0x66, 0xfd, 0x28, 0x17, 0x94, 0x80, 0x89, 0xc5, 0x18, 0x92, 0x0d, 0x14, 0xfd,
	0x26, 0x38, 0x77, 0xf8, 0xea, 0x24, 0x8c, 0x97, 0x1c, 0xad, 0x67, 0x7c, 0xa5, 0x32, 0x40, 0x11,
	0xcb, 0x39, 0x47, 0x93, 0xba, 0xbf, 0x00, 0xfe, 0x57, 0x50, 0xd7, 0x67, 0x64, 0x54, 0x0f, 0x4a,
	0x67, 0xe7, 0x32, 0x68, 0xad, 0x49, 0x74, 0x26, 0xda, 0x83, 0x95, 0xce, 0xce, 0xfd, 0xeb, 0xe0,
	0x1c, 0x85, 0xe2, 0xf1, 0xdb, 0x0a, 0xf5, 0x5d, 0xa8, 0x8c, 0x52, 0x69, 0x7d, 0xad, 0xb1, 0xfe,
	0x11, 0x38, 0xa3, 0x34, 0x10, 0xa1, 0x58, 0xe6, 0xd8, 0x0e, 0x9e, 0x65, 0x93, 0x64, 0x5a, 0x4c,
	0x8a, 0xc5, 0x34, 0x94, 0x04, 0x67, 0xd9, 0x3c, 0x9f, 0x69, 0xa2, 0x0a, 0x84, 0x77, 0x9d, 0xc6,
	0xe1, 0x4c, 0xb2, 0x64, 0x31, 0x29, 0xfb, 0xbf, 0x1b, 0x50, 0xbe, 0xdf, 0x4e, 0x62, 0x0c, 0x37,
	0x49, 0xe2, 0xad, 0xc1, 0xd3, 0x50, 0xce, 0x63, 0x96, 0x3c, 0xd5, 0xb3, 0x87, 0xb2, 0x9e, 0x85,
	0x79, 0x98, 0xca, 0x61, 0x72, 0x98, 0x86, 0x48, 0x52, 0x3e, 0x0d, 0x45, 0xe8, 0x96, 0x25, 0xad,
	0x05, 0x40, 0xff, 0xe8, 0x76, 0x53, 0xea, 0x2d, 0xcf, 0xc4, 0x64, 0x15, 0x94, 0x96, 0xfd, 0x3d,
	0x69, 0xa9, 0x78, 0x66, 0xc3, 0x64, 0x1a, 0xa2, 0xe5, 0x54, 0x9d, 0xb1, 0x3d, 0xb3, 0x51, 0x62,
	0x1a, 0x4a, 0x8b, 0x3a, 0xe3, 0x78, 0x66, 0xc3, 0x60, 0x1a, 0xa2, 0xe5, 0x51, 0xb4, 0x90, 0x96,
	0xaa, 0x67, 0x36, 0xea, 0x4c, 0x43, 0xff, 0x01, 0xd8, 0xf7, 0x59, 0xf2, 0x34, 0xe0, 0xb2, 0xef,
	0x22, 0x9c, 0x29, 0xd6, 0x50, 0xc4, 0xa4, 0xb3, 0x64, 0xb9, 0x98, 0xaa, 0x1a, 0x0b, 0x40, 0x6f,
	0x48, 0x4a, 0x96, 0xf3, 0x45, 0xb1, 0x31, 0xb5, 0x66, 0x5d, 0xb7, 0x13, 0x19, 0x63, 0xda, 0xe8,
	0xff, 0x8d, 0x1c, 0x0e, 0x0a, 0x82, 0xdf, 0xd8, 0xdc, 0x2f, 0xc1, 0x7a, 0x26, 0x59, 0xc7, 0xd0,
	0xbb, 0xcd, 0x0f, 0x37, 0x21, 0x06, 0xf9, 0x4c, 0xfe, 0x1c, 0xc6, 0xe1, 0x8c, 0x15, 0x3e, 0x18,
	0x40, 0x36, 0x54, 0x75, 0x48, 0x76, 0x93, 0x42, 0x39, 0x5a, 0x9c, 0x26, 0x6a, 0x87, 0xa4, 0x4c,
	0x3f, 0x83, 0x4a, 0x96, 0x3c, 0xcd, 0xb9, 0x90, 0x2b, 0xb4, 0x35, 0xf1, 0xaa, 0x44, 0xa6, 0xcc,
	0xfe, 0x5d, 0x70, 0xf4, 0x1d, 0xd4, 0x06, 0xb3, 0x3b, 0x0a, 0xc8, 0xa5, 0x42, 0x38, 0x20, 0x06,
	0xad, 0x83, 0xd3, 0x1e, 0x0d, 0xc7, 0xbd, 0xe1, 0x71, 0x97, 0x94, 0x68, 0x15, 0xca, 0xc1, 0x83,
	0x61, 0x9b, 0xfc, 0x61, 0xd3, 0x3a, 0xd8, 0x07, 0xc1, 0x91, 0x44, 0x7f, 0x6a, 0xd4, 0x69, 0x8d,
	0x5b, 0xe4, 0x2f, 0xdb, 0xff, 0xad, 0x04, 0x35, 0xc6, 0xc3, 0x29, 0xe3, 0x4f, 0x96, 0x3c, 0x17,
	0xf4, 0x26, 0x38, 0xa7, 0x51, 0xcc, 0xe5, 0xfe, 0x19, 0x32, 0x9b, 0xcd, 0xd4, 0xeb, 0x75, 0x66,
	0x1b, 0x0f, 0xda, 0x04, 0x28, 0x68, 0x9b, 0xf2, 0x7c, 0xe2, 0x96, 0x24, 0xad, 0x74, 0xb3, 0xaf,
	0x9b, 0x47, 0x90, 0x6d, 0x79, 0xd1, 0xeb, 0xfa, 0x4c, 0x1c, 0xe5, 0x42, 0x3d, 0x5e, 0x5b, 0x1a,
	0x7a, 0x03, 0x2a, 0xa7, 0xf2, 0x21, 0x94, 0x33, 0x57, 0x6b, 0xee, 0x6e, 0xdd, 0x2f, 0x78, 0xc6,
	0x94, 0x95, 0x7e, 0x04, 0xf6, 0x69, 0x16, 0xce, 0x1e, 0x46, 0x53, 0x49, 0x9b, 0xc5, 0x2a, 0x08,
	0x7b, 0x53, 0xfa, 0x31, 0x38, 0xd2, 0x30, 0x59, 0x08, 0xb7, 0x52, 0xec, 0x12, 0xe2, 0xf6, 0x42,
	0xe0, 0x06, 0x8a, 0xdc, 0xb5, 0x3d, 0xa3, 0x61, 0xb2, 0x92, 0xc8, 0x8b, 0x27, 0x8d, 0x67, 0x2b,
	0xd7, 0xf1, 0x8c, 0x46, 0x9d, 0x15, 0x40, 0x8e, 0x5d, 0x9c, 0x24, 0xf3, 0xfc, 0xb9, 0x5b, 0x2d,
	0xce, 0x2b, 0x88, 0xfe, 0x52, 0x74, 0xa1, 0xf0, 0x97, 0xc0, 0xff, 0xd5, 0x80, 0x9d, 0x20, 0x9c,
	0xa7, 0x31, 0xff, 0xff, 0x58, 0xdc, 0xaa, 0xde, 0x7c, 0x6b, 0xf5, 0xe5, 0x7f, 0x57, 0xaf, 0x57,
	0xdf, 0xba, 0x58, 0x7d, 0xff, 0x2e, 0x54, 0x3b, 0xa1, 0x08, 0x19, 0x4f, 0xe3, 0xd5, 0xbb, 0x3d,
	0x42, 0x72, 0x3d, 0x4d, 0xc9, 0x87, 0x94, 0xfd, 0x09, 0xec, 0xe0, 0x46, 0xfd, 0x97, 0xb0, 0xde,
	0x56, 0xd8, 0xd7, 0x17, 0xb5, 0xb8, 0xe4, 0x67, 0x03, 0x2e, 0x07, 0xd1, 0x73, 0x3e, 0xe0, 0x78,
	0xcb, 0x7b, 0xcc, 0xba, 0x7f, 0x06, 0x3b, 0x17, 0x89, 0xbe, 0x33, 0xcb, 0xb2, 0x71, 0xa6, 0x1c,
	0xdc, 0xe2, 0xcd, 0xbe, 0x02, 0xd6, 0xe2, 0xd1, 0x4a, 0xfd, 0x1b, 0x9b, 0xac, 0x00, 0xfe, 0x2f,
	0x06, 0xd4, 0xef, 0x65, 0x91, 0x78, 0xcf, 0x27, 0xb1, 0xd8, 0x43, 0x4b, 0xef, 0xa1, 0xff, 0x09,
	0x54, 0x65, 0xd6, 0x38, 0x33, 0x9b, 0x99, 0x32, 0xb6, 0x66, 0xea, 0x5b, 0x00, 0x55, 0xd6, 0x3b,
	0x31, 0xf8, 0xc5, 0x8f, 0x26, 0xd8, 0x41, 0xfa, 0x64, 0xbc, 0x4a, 0x39, 0xad, 0x81, 0x7d, 0x3c,
	0xbc, 0x33, 0x1c, 0xdd, 0x1b, 0x92, 0x4b, 0xd4, 0x81, 0xf2, 0xc1, 0x68, 0xd4, 0x27, 0x06, 0xad,
	0x82, 0xd5, 0x1b, 0x8e, 0xbf, 0xde, 0x97, 0x6f, 0x27, 0x8a, 0xb7, 0x9b, 0xc4, 0x54, 0xe2, 0xfe,
	0x1e, 0x29, 0x53, 0x80, 0x0a, 0x3a, 0x34, 0xbf, 0x21, 0x16, 0xaa, 0x0f, 0xfb, 0xa3, 0xd6, 0x98,
	0x54, 0x50, 0xdd, 0x19, 0x1d, 0x1f, 0xf4, 0xbb, 0xc4, 0xc6, 0x68, 0xed, 0x60, 0xcc, 0x48, 0x15,
	0x1d, 0x3a, 0xdd, 0xf6, 0xfe, 0x1e, 0x01, 0xe9, 0xd0, 0x6d, 0xe3, 0xb9, 0x1a, 0x3a, 0x1c, 0x1f,
	0xf7, 0x3a, 0xa4, 0x8e, 0xaf, 0x75, 0x6f, 0x38, 0xee, 0xb2, 0x93, 0x56, 0x9f, 0xec, 0x60, 0x4e,
	0x27, 0x2d, 0xd6, 0xef, 0x0e, 0x5b, 0x64, 0x97, 0x02, 0x94, 0x3b, 0xad, 0x71, 0x97, 0xbc, 0x58,
	0x97, 0xe9, 0x07, 0x50, 0x1b, 0xf7, 0x06, 0xdd, 0x87, 0x83, 0x5e, 0xbf, 0xdf, 0x0b, 0xc8, 0x8b,
	0xb5, 0x43, 0xaf, 0x02, 0x41, 0x55, 0x30, 0x6e, 0x0d, 0x8e, 0xb4, 0xfe, 0x87, 0x75, 0x7d, 0xcb,
	0xb5, 0xcd, 0x46, 0xa8, 0x22, 0xaf, 0xbb, 0x2a, 0xfd, 0x15, 0xbc, 0xe1, 0xbb, 0x60, 0x34, 0x24,
	0x2f, 0xd7, 0x2e, 0xdd, 0x01, 0x7b, 0x78, 0x3c, 0xe8, 0xb2, 0x5e, 0x9b, 0xbc, 0x5c, 0x5f, 0xa3,
	0x2e, 0xd0, 0xcd, 0x91, 0xf1, 0xf7, 0x17, 0xf1, 0xbd, 0x37, 0x2d, 0x2a, 0xdc, 0xa7, 0x18, 0x62,
	0xd0, 0x6a, 0xb7, 0x3a, 0x1d, 0x46, 0x5e, 0xad, 0x1b, 0x18, 0xbd, 0x37, 0xec, 0x8e, 0xc9, 0xab,
	0xf5, 0x4d, 0xba, 0x03, 0x56, 0x8b, 0xb1, 0xd6, 0x03, 0xb2, 0x5e, 0xaf, 0xd7, 0xc6, 0x81, 0x0b,
	0x57, 0x27, 0xc9, 0xfc, 0xd6, 0x79, 0x24, 0x78, 0x9e, 0x73, 0x6c, 0xad, 0x9a, 0xae, 0x47, 0x15,
	0xf9, 0x11, 0x7d, 0xfb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x79, 0x9d, 0x69, 0xf8, 0x54, 0x0b,
	0x00, 0x00,
}
